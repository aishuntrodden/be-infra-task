events {
    worker_connections 1024;  # This is a required directive
}

http {
    upstream orders {
        server orders:3100;  # Use internal Docker network port
    }

    upstream products {
        server products:3200;  # Use internal Docker network port
    }

    upstream user {
        server user:3000;  # Use internal Docker network port
    }

    server {
        listen 80;

        location /orders {
            proxy_pass http://orders;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /products {
            proxy_pass http://products;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /user {
            proxy_pass http://user;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
